<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wuahh.arika.dao.mapper.gen.ExecuteGroupMapper">
  <resultMap id="BaseResultMap" type="com.wuahh.arika.dao.entity.ExecuteGroup">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 04 15:46:01 CST 2021.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="repo_conf_id" jdbcType="INTEGER" property="repoConfId" />
    <result column="branch" jdbcType="VARCHAR" property="branch" />
    <result column="batch_num" jdbcType="VARCHAR" property="batchNum" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="commit_id" jdbcType="CHAR" property="commitId" />
    <result column="commit_message" jdbcType="VARCHAR" property="commitMessage" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.wuahh.arika.dao.entity.ExecuteGroup">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 04 15:46:01 CST 2021.
    -->
    <result column="output_message" jdbcType="LONGVARCHAR" property="outputMessage" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 04 15:46:01 CST 2021.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 04 15:46:01 CST 2021.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 04 15:46:01 CST 2021.
    -->
    id, project_id, repo_conf_id, branch, batch_num, status, commit_id, commit_message, 
    update_time, create_time
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 04 15:46:01 CST 2021.
    -->
    output_message
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.wuahh.arika.dao.entity.ExecuteGroupExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 04 15:46:01 CST 2021.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from execute_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.wuahh.arika.dao.entity.ExecuteGroupExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 04 15:46:01 CST 2021.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from execute_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 04 15:46:01 CST 2021.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from execute_group
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 04 15:46:01 CST 2021.
    -->
    delete from execute_group
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wuahh.arika.dao.entity.ExecuteGroupExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 04 15:46:01 CST 2021.
    -->
    delete from execute_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.wuahh.arika.dao.entity.ExecuteGroup" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 04 15:46:01 CST 2021.
    -->
    insert into execute_group (id, project_id, repo_conf_id, 
      branch, batch_num, status, 
      commit_id, commit_message, update_time, 
      create_time, output_message)
    values (#{id,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{repoConfId,jdbcType=INTEGER}, 
      #{branch,jdbcType=VARCHAR}, #{batchNum,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{commitId,jdbcType=CHAR}, #{commitMessage,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{outputMessage,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.wuahh.arika.dao.entity.ExecuteGroup" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 04 15:46:01 CST 2021.
    -->
    insert into execute_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="repoConfId != null">
        repo_conf_id,
      </if>
      <if test="branch != null">
        branch,
      </if>
      <if test="batchNum != null">
        batch_num,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="commitId != null">
        commit_id,
      </if>
      <if test="commitMessage != null">
        commit_message,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="outputMessage != null">
        output_message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="repoConfId != null">
        #{repoConfId,jdbcType=INTEGER},
      </if>
      <if test="branch != null">
        #{branch,jdbcType=VARCHAR},
      </if>
      <if test="batchNum != null">
        #{batchNum,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="commitId != null">
        #{commitId,jdbcType=CHAR},
      </if>
      <if test="commitMessage != null">
        #{commitMessage,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outputMessage != null">
        #{outputMessage,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wuahh.arika.dao.entity.ExecuteGroupExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 04 15:46:01 CST 2021.
    -->
    select count(*) from execute_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 04 15:46:01 CST 2021.
    -->
    update execute_group
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.repoConfId != null">
        repo_conf_id = #{record.repoConfId,jdbcType=INTEGER},
      </if>
      <if test="record.branch != null">
        branch = #{record.branch,jdbcType=VARCHAR},
      </if>
      <if test="record.batchNum != null">
        batch_num = #{record.batchNum,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.commitId != null">
        commit_id = #{record.commitId,jdbcType=CHAR},
      </if>
      <if test="record.commitMessage != null">
        commit_message = #{record.commitMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.outputMessage != null">
        output_message = #{record.outputMessage,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 04 15:46:01 CST 2021.
    -->
    update execute_group
    set id = #{record.id,jdbcType=INTEGER},
      project_id = #{record.projectId,jdbcType=INTEGER},
      repo_conf_id = #{record.repoConfId,jdbcType=INTEGER},
      branch = #{record.branch,jdbcType=VARCHAR},
      batch_num = #{record.batchNum,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      commit_id = #{record.commitId,jdbcType=CHAR},
      commit_message = #{record.commitMessage,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      output_message = #{record.outputMessage,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 04 15:46:01 CST 2021.
    -->
    update execute_group
    set id = #{record.id,jdbcType=INTEGER},
      project_id = #{record.projectId,jdbcType=INTEGER},
      repo_conf_id = #{record.repoConfId,jdbcType=INTEGER},
      branch = #{record.branch,jdbcType=VARCHAR},
      batch_num = #{record.batchNum,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      commit_id = #{record.commitId,jdbcType=CHAR},
      commit_message = #{record.commitMessage,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wuahh.arika.dao.entity.ExecuteGroup">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 04 15:46:01 CST 2021.
    -->
    update execute_group
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="repoConfId != null">
        repo_conf_id = #{repoConfId,jdbcType=INTEGER},
      </if>
      <if test="branch != null">
        branch = #{branch,jdbcType=VARCHAR},
      </if>
      <if test="batchNum != null">
        batch_num = #{batchNum,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="commitId != null">
        commit_id = #{commitId,jdbcType=CHAR},
      </if>
      <if test="commitMessage != null">
        commit_message = #{commitMessage,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outputMessage != null">
        output_message = #{outputMessage,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.wuahh.arika.dao.entity.ExecuteGroup">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 04 15:46:01 CST 2021.
    -->
    update execute_group
    set project_id = #{projectId,jdbcType=INTEGER},
      repo_conf_id = #{repoConfId,jdbcType=INTEGER},
      branch = #{branch,jdbcType=VARCHAR},
      batch_num = #{batchNum,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      commit_id = #{commitId,jdbcType=CHAR},
      commit_message = #{commitMessage,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      output_message = #{outputMessage,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wuahh.arika.dao.entity.ExecuteGroup">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 04 15:46:01 CST 2021.
    -->
    update execute_group
    set project_id = #{projectId,jdbcType=INTEGER},
      repo_conf_id = #{repoConfId,jdbcType=INTEGER},
      branch = #{branch,jdbcType=VARCHAR},
      batch_num = #{batchNum,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      commit_id = #{commitId,jdbcType=CHAR},
      commit_message = #{commitMessage,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertList" parameterType="list">
    insert into execute_group (id, project_id, repo_conf_id, branch, batch_num, status, commit_id, commit_message, update_time, create_time, output_message) values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.projectId,jdbcType=INTEGER}, #{item.repoConfId,jdbcType=INTEGER}, #{item.branch,jdbcType=VARCHAR}, #{item.batchNum,jdbcType=VARCHAR}, #{item.status,jdbcType=TINYINT}, #{item.commitId,jdbcType=CHAR}, #{item.commitMessage,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.outputMessage,jdbcType=LONGVARCHAR})
    </foreach>
  </insert>
  <insert id="insertListSelective" parameterType="list">
    <foreach collection="list" index="index" item="item" separator=";">
      insert into execute_group
      <trim prefix=" (" suffix=")" suffixOverrides=",">
        <if test="item.id != null">
          id,
        </if>
        <if test="item.projectId != null">
          project_id,
        </if>
        <if test="item.repoConfId != null">
          repo_conf_id,
        </if>
        <if test="item.branch != null">
          branch,
        </if>
        <if test="item.batchNum != null">
          batch_num,
        </if>
        <if test="item.status != null">
          status,
        </if>
        <if test="item.commitId != null">
          commit_id,
        </if>
        <if test="item.commitMessage != null">
          commit_message,
        </if>
        <if test="item.updateTime != null">
          update_time,
        </if>
        <if test="item.createTime != null">
          create_time,
        </if>
        <if test="item.outputMessage != null">
          output_message,
        </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="item.id != null">
          #{item.id,jdbcType=INTEGER},
        </if>
        <if test="item.projectId != null">
          #{item.projectId,jdbcType=INTEGER},
        </if>
        <if test="item.repoConfId != null">
          #{item.repoConfId,jdbcType=INTEGER},
        </if>
        <if test="item.branch != null">
          #{item.branch,jdbcType=VARCHAR},
        </if>
        <if test="item.batchNum != null">
          #{item.batchNum,jdbcType=VARCHAR},
        </if>
        <if test="item.status != null">
          #{item.status,jdbcType=TINYINT},
        </if>
        <if test="item.commitId != null">
          #{item.commitId,jdbcType=CHAR},
        </if>
        <if test="item.commitMessage != null">
          #{item.commitMessage,jdbcType=VARCHAR},
        </if>
        <if test="item.updateTime != null">
          #{item.updateTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.createTime != null">
          #{item.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.outputMessage != null">
          #{item.outputMessage,jdbcType=LONGVARCHAR},
        </if>
      </trim>
    </foreach>
  </insert>
</mapper>